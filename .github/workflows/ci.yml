name: Continuous Integration

on:
  pull_request:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  test-docker:
    name: Docker Tests
    runs-on: ubuntu-latest

    # Run a local registry to push to
    services:
      registry:
        image: registry:2
        ports:
          - 5001:5000

    env:
      TEST_TAG: localhost:5001/actions/container-action:latest

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Setup Docker BuildX
        id: setup-buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver-opts: network=host

      - name: Build the Container
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ env.TEST_TAG }}

      - name: Run the Container
        id: run
        env:
          INPUT_VARIABLES: '/app/test/config-a.yaml,/app/test/config-b.yaml'
          INPUT_MODEL_FILE: /app/test/model.py
          INPUT_CLASS_MODEL: ConfigModel
          INPUT_TEMPLATE_FILTERS_DIRECTORY: /app/test/filters
          INPUT_TEMPLATE_TESTS_DIRECTORY: /app/test/test
          INPUT_OUTPUT: /tmp/output.txt
          INPUT_INPUT_FILE: /app/test/input.txt.j2
        run: |
          docker run \
            --env INPUT_VARIABLES="${{ env.INPUT_VARIABLES }}" \
            --env INPUT_MODEL_FILE="${{ env.INPUT_MODEL_FILE }}" \
            --env INPUT_CLASS_MODEL="${{ env.INPUT_CLASS_MODEL }}" \
            --env INPUT_TEMPLATE_FILTERS_DIRECTORY="${{ env.INPUT_TEMPLATE_FILTERS_DIRECTORY }}" \
            --env INPUT_TEMPLATE_TESTS_DIRECTORY="${{ env.INPUT_TEMPLATE_TESTS_DIRECTORY }}" \
            --env INPUT_OUTPUT="${{ env.INPUT_OUTPUT }}" \
            --env INPUT_INPUT_FILE="${{ env.INPUT_INPUT_FILE }}" \
            --rm ${{ env.TEST_TAG }}

  test-action:
    name: GitHub Actions Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Test Local Action
        id: test-action
        uses: ./
        with:
          who-to-greet: Mona Lisa Octocat

      - name: Print Output
        id: output
        run: echo "${{ steps.test-action.outputs.greeting }}"
